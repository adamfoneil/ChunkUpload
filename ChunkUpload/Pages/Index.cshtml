@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@section Head {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/dropzone@5.7.2/dist/dropzone.css" integrity="sha256-3SE+Qz2RvIa5gOHSNS50MUTTzRAOYREA5+DOmMNFPYk=" crossorigin="anonymous">
}

<form id="dropzone" 
      method="post" 
      action="files/upload" 
      enctype="multipart/form-data" 
      class="dropzone form-group">
</form>

<button id="upload" class="btn btn-primary">Upload</button>

<hr />

<form id="uploadForm" 
      method="post"
      action="files/upload"
      enctype="multipart/form-data" 
      onsubmit="stream(this); return false;">
    
    <div class="form-group">
        <label for="file">File streaming</label>
        <input  id="file" name="file" type="file" class="form-control-file"/>
    </div>
    
    <div class="form-group">
        <input class="btn btn-primary" type="submit" value="Upload" />
    </div>

</form>

<hr/>

<h3>links don't work...</h3>
<p>In blob storage, container uses default permissions, which is private. You'd need a SAS or change container permission.</p>
<p>In local storage, browsers don't allow access to local files apparently.</p>

<ul>
    @foreach (var item in Model.ExistingFiles)
    {
        <li><a href="@item.ToString()">@item.GetComponents(UriComponents.Path, UriFormat.Unescaped)</a></li>
    }
</ul>

@if (Model.Storage.SupportsDownload)
{
    <h2>Download</h2>
    <form asp-page-handler="Download">
        <select name="name" class="form-control" onchange="this.form.submit()">
            <option value="">(select)</option>
            @foreach (var item in Model.ExistingFiles)
            {
                <option value="@item.LocalPath">@item.LocalPath</option>
            }
        </select>
    </form>
}

<h2>Move</h2>
<form asp-page-handler="Move">
    <div class="form-group">
        <label>New Container:</label>
        <input type="text" name="container" required="required" class="form-control"/>
    </div>

    <div class="form-group">
        <label>Blob:</label>
        <select name="name" class="form-control">
            <option value="">(select)</option>
            @foreach (var item in Model.ExistingFiles)
            {
                <option value="@item.LocalPath">@item.LocalPath</option>
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Move Blob</button>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/dropzone@5.7.2/dist/dropzone.min.js"></script>
    <script src="~/js/upload.js"></script>
    <script>
        Dropzone.autoDiscover = false;
        let dropZone = null;       

        function upload() {
            dropZone.processQueue();
        }
     
        $(document).ready(function() {
            const element = document.getElementById("dropzone");
            dropZone = new Dropzone(element,
            {
                chunking: true,
                timeout: 3600000,
                addRemoveLinks: true, // this adds link to remove file from dropzone
                maxFilesize: 10485760, // 10 gig max file size
                autoProcessQueue: false, // this stops the chunks from immediate upload
                chunksUploaded: function (file, CompleteUpload) {
                    console.log("uploaded: " + file);
                }
            });

            // upload button event listener
            $('#upload').on('click', upload);
        });        
    </script>
}  
